function op = ObtainTrimPoint(StateVals,AeroType)
%% Search for a specified operating point for the model - NL_Simulation.
%
% This MATLAB script is the command line equivalent of the trim model
% tab in linear analysis tool with current specifications and options.
% It produces the exact same operating points as hitting the Trim button.

% MATLAB(R) file generated by MATLAB(R) 9.4 and Simulink Control Design (TM) 5.1.
%
% Generated on: 08-Nov-2018 13:30:07

%% Specify the model name
mdl = 'NL_Simulation';

%% Create the operating point specification object.
opspec = operspec(mdl);

%% Set operation point to Initial state value
opspec.States(1).x = StateVals.CSPos;
opspec.States(2).x = StateVals.Eular;
opspec.States(3).x = StateVals.AngRates;
opspec.States(4).x = StateVals.Vb;
opspec.States(5).x = StateVals.Xe;
opspec.States(6).x = StateVals.Eta;
opspec.States(7).x = StateVals.EtaDot;
if strcmp(AeroType,'DLM')
    opspec.States(8).x = StateVals.Lag;
end

%% Set the constraints on the states in the model.
% - The defaults for all states are Known = false, SteadyState = true,
%   Min = -Inf, Max = Inf, dxMin = -Inf, and dxMax = Inf.

% State (1) - NL_Simulation/CS Mixing and Model/CS Model/CS Pos

% State (2) - NL_Simulation/Flight mechanics/6DOF/
%               Calculate DCM & Euler Angles/phi theta psi
opspec.States(2).Known = [true;false;true];

% State (3) - NL_Simulation/Flight mechanics/6DOF/p,q,r
% - Default model initial conditions are used to initialize optimization.
opspec.States(3).Known = [true;true;true];

% State (4) - NL_Simulation/Flight mechanics/6DOF/ub,vb,wb

% State (5) - NL_Simulation/Flight mechanics/6DOF/xe,ye,ze
% - Default model initial conditions are used to initialize optimization.
opspec.States(5).Known = [false;false;true];
opspec.States(5).SteadyState = [false;true;true];

% State (6) - NL_Simulation/Flight mechanics/Structural Model/Eta
% - Default model initial conditions are used to initialize optimization.

% State (7) - NL_Simulation/Flight mechanics/Structural Model/Etadot
opspec.States(7).Known = [true;true;true;true;true;true];

% State (8) - NL_Simulation/Force and Moment /Aerodynamic Model/
%               Unsteady Aerodynamics/Normal Forces/Lag dynamics/Lag
if strcmp(AeroType,'DLM')
    opspec.States(8).Known = ones(2*888,1);
end


%% Set the constraints on the inputs in the model.
% - The defaults for all inputs are Known = false, Min = -Inf, and
% Max = Inf.

% Input (1) - NL_Simulation/Throttle
% - Default model initial conditions are used to initialize optimization.

% Input (2) - NL_Simulation/Mixed CS
% - Default model initial conditions are used to initialize optimization.

%% Set the constraints on the outputs in the model.
% - The defaults for all outputs are Known = false, Min = -Inf, and
% Max = Inf.

% Output (1) - NL_Simulation/Omegab
% - Default model initial conditions are used to initialize optimization.


%% Create the options
opt1 = optimset('MaxFunEvals',1000,'Algorithm','sqp'); %,'TolX',1e-3,'TolFun',1e-3); 
opt = findopOptions('OptimizationOptions',opt1,'DisplayReport','iter');  
% opt = findopOptions('DisplayReport','iter');

%% Perform the operating point search.
op = findop(mdl,opspec,opt);

end